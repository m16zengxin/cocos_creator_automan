// Effect Syntax Guide: https://github.com/cocos-creator/docs-3d/blob/master/zh/material-system/effect-syntax.md

CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: general-vs:vert # builtin header
      frag: unlit-fs:frag
      properties: &props
        mainTexture:    { value: white }
        # mainColor:      { value: [1, 1, 1, 1], editor: { type: color } }
        oldLevel: {
          value: 0,
          editor: {
            tooltip: "老化程度",
            range: [0.0, 1.0]
          }
        }
  - name: transparent
    passes:
    - vert: general-vs:vert # builtin header
      frag: unlit-fs:frag
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendSrcAlpha: src_alpha
          blendDstAlpha: one_minus_src_alpha
      properties: *props
}%

// CCProgram general-vs %{
//   precision highp float;
//   #include <cc-global>
//   #include <cc-local-batch>
//   #include <input>

//   in vec2 a_texCoord;
//   out vec2 v_uv;

//   // uniform Constants {
//   //   vec4 allOffset;
//   //   float dist;
//   // };

//   highp vec4 vert () {
//     vec4 position;
//     CCVertInput(position);

//     highp mat4 matWorld;
//     CCGetWorldMatrix(matWorld);

//     highp vec4 vpos = cc_matView * matWorld * position;
//     highp vec4 pos = cc_matProj * vpos;
//     return pos;
//   }
// }%

CCProgram unlit-fs %{
  precision highp float;
  #include <output>

  in vec2 v_uv;
  uniform sampler2D mainTexture;

  uniform Constant {
    // 老化程度1122
    float oldLevel;
  };

  /**
   * 获取老化颜色
   * 
   * @param color 原始颜色 
   *
   * @return 老化后的颜色
   */
  vec4 getOldPhotoColor(vec4 color) {
    float r = 0.393 * color.r + 0.769 * color.g + 0.189 * color.b; 
    float g = 0.349 * color.r + 0.686 * color.g + 0.168 * color.b; 
    float b = 0.272 * color.r + 0.534 * color.g + 0.131 * color.b;
    return vec4(r, g, b, color.a);
  }

  vec4 frag () {
    vec4 o = vec4(1, 1, 1, 1);
    o *= texture(mainTexture, v_uv);

    vec4 srcColor = o;
    vec4 oldColor = getOldPhotoColor(srcColor);

    o = mix(srcColor, oldColor, oldLevel);
    return CCFragOutput(o);
  }
}%
